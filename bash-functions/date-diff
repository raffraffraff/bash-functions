#!/bin/bash

source is-int

date-diff() {
  declare -a ARGS=()

  # Parse args
  until [ -z "$1" ]; do
    case $1 in
       -s|--seconds)  SEC=1;;
       -m|--minutes)  SEC=60;;
       -h|--hours)    SEC=3600;;
       -d|--days)     SEC=86400;;
       *)             ARGS+=("$1");;
    esac
    shift
  done

  # Sanity check the input
  if [ "${#ARGS[@]}" -eq 1 ]; then
    DATE2=${ARGS[0]}
    DATE1=now
  elif [ "${#ARGS[@]}" -eq 2 ]; then
    DATE2=${ARGS[1]}
    DATE1=${ARGS[0]}
  else
    echo "Usage: date-diff [-s] [-m] [-h] [-d] <date1> [date2]" >&2
    return 1
  fi

  # Handle epoch dates
  is-int "${DATE1}" && DATE1="@${DATE1}"
  is-int "${DATE2}" && DATE2="@${DATE2}"

  # Convert to epoch for calculatiopn
  EPOCH1=$(date --utc +%s -d "${DATE1}") || return 1
  EPOCH2=$(date --utc +%s -d "${DATE2}") || return 1

  # Diff dates and return in correct denomination
  awk \
    -v EPOCH1=$EPOCH1 \
    -v EPOCH2=$EPOCH2 \
    -v SEC=${SEC:-1} \
    'BEGIN {print (EPOCH1-EPOCH2)/SEC}'
}
