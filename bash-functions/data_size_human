# data_size_human accepts a data size and converts it to human-readable. It can
# accept without a unit of measurement (assumes it to be bytes) or with a unit
# of measurement (eg GB). It converts the value into human-readable data size
# using the most appropriate unit of measurement. Examples:
# 
# `data_size_human 21002302203` returns '19.56GB'
# `data_size_bytes 100000G` returns '97.66TB'

# Requires:
#  - functions 'is_num', 'data_size_bytes'
#  - gawk/nawk

data_size_human() {

  local SIZE
  source is_num
  source data_size_bytes

  is_num $1 
  if [ $? -eq 0 ]; then
    SIZE=$1
  else
    SIZE=$(data_size_bytes $1) 
  fi

  awk -v size="$SIZE" '
      BEGIN {
        human[1024^5]="PB"
        human[1024^4]="TB"
        human[1024^3]="GB"
        human[1024^2]="MB"
        human[1024]="KB"
        for (x=1024^5; x>=1024; x/=1024) {
          if (size>=x) {
            printf "%.2f%s\n",size/x,human[x]
            break
          }
        }
        if (size<1024) print size"B"
      }
    '
}
